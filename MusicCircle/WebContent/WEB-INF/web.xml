<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xmlns="http://java.sun.com/xml/ns/javaee" 
		 xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd
		 			http://java.sun.com/dtd/web-app_2_3.dtd" 
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
		 		http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd
		 		http://www.springframework.org/schema/mvc
		 		http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd" 
		 		id="WebApp_ID" version="3.0">
  
  
  	
  
    <!-- 乱码解决设置↓↓↓↓↓↓↓↓↓ -->
	<filter> 
		<filter-name>Springcharacter</filter-name> 
		<filter-class> 
			org.springframework.web.filter.CharacterEncodingFilter 
		</filter-class> 
		<init-param> 
			<param-name>encoding</param-name> 
			<param-value>utf-8</param-value> 
		</init-param> 
	</filter> 
	<filter-mapping> 
		<filter-name>Springcharacter</filter-name> 
		<url-pattern>/*</url-pattern> 
	</filter-mapping>
	
	
	
	
	
	<!-- 乱码解决设置↑↑↑↑↑↑↑↑ -->
	<filter>
		<filter-name>hibernateFilter</filter-name>   
	     <filter-class>  org.springframework.orm.hibernate3.support.OpenSessionInViewFilter </filter-class>   
	</filter>
	<filter-mapping>   
	     <filter-name>hibernateFilter</filter-name>   
	     <url-pattern>/*</url-pattern>   
	</filter-mapping>
    
    <!-- ↓↓↓↓↓↓↓↓↓↓↓↓ EHcache的FIlter的拦截器配置
                   配置：缓存、gzip压缩核心过滤器   配置你需要缓存的url
     ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
  	<!-- 1.【页面缓存】单个博文信息页面（hugo/blogcreate.jsp）结合NoSQL防止页面耍浏览量的缓存拦截  -->
  	<!-- <filter>
  	    <filter-name>BlogOnePageEcheFilter</filter-name>
  	    <filter-class>rhyme.com.hugo.ehcacheFilter.BlogOnePageEcheFilter</filter-class>
  		<init-param>
  		    <param-name>patterns</param-name>  Java的Filter的获取名称
  			<param-value>/blogpostone.shtml</param-value> 
  		</init-param>
  	</filter>
  	<filter-mapping>
  	    <filter-name>BlogOnePageEcheFilter</filter-name>
  	    <url-pattern>/blogpostone.shtml</url-pattern>
  	</filter-mapping> -->
  	
  	<!-- 单纯的页面缓存↓↓↓↓↓↓↓↓↓ -->
	<!-- <filter>
	    <filter-name>PageEhcacheFilter</filter-name>
	    <filter-class>cache.ehcacheFilter.PageEhcacheFilter</filter-class>
	    <init-param>
	        <param-name>patterns</param-name> -->
	        <!-- 配置需要缓存的URl -->
	        <!--	/home  ,  : 主页 -->
	        <!-- 	/posts ,: 职位信息  -->
	        <!-- 	/blogpostone.shtml,  : 单个Blog信息 -->
	        <!-- 	/blogpost.shtml  : 博文主页 -->
	        
	        <!-- <param-value>/blogpost.shtml,/blogpostone.shtml</param-value>
	    </init-param>
	</filter>
	<filter-mapping>
	    <filter-name>PageEhcacheFilter</filter-name>
	    <url-pattern>*</url-pattern>
	</filter-mapping> -->
	<!-- 单纯的页面缓存↑↑↑↑↑↑↑↑ -->
	<!-- ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ EHcache的FIlter的拦截器配置 ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ -->	
	
  	
  	<!-- 通过上下文参数指定spring配置文件的位置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:beans.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	
	
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 通过初始化参数指定springmvc配置文件的位置 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	
	
	
	<!-- <servlet>  
	   <servlet-name>init</servlet-name>  
	   <servlet-class>com.java.letch.app.socket.StartupServlet</servlet-class>  
	   <load-on-startup>3</load-on-startup>
   </servlet>  -->


	<!-- 配置可以访问静态资源 -->
	<servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.gif</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.png</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.jpg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.jpeg</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.eot</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.svg</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.ttf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.woff</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.otf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.woff2</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/main/css/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/main/img/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/ahtm/css/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/static/iphoto/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/static/cmppicture/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/static/inewsimg/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>default</servlet-name>
    	<url-pattern>/static/inews/*</url-pattern>
    </servlet-mapping>
    
    
    <!-- <mvc:default-servlet-handler/> -->
    <!-- 配置可以访问静态资源 -->
  
  <display-name>MusicCircle</display-name>
  <welcome-file-list>
    <welcome-file>/test_index</welcome-file>
  </welcome-file-list>
  
   <!-- 配置错误页面 -->
   <error-page>
       <error-code>404</error-code>
       <location>/error/404.html</location>
   </error-page>
   <error-page>
       <error-code>500</error-code>
       <location>/error/404.html</location>
   </error-page>
   <!-- 配置错误页面 -->
   
   
  
</web-app>